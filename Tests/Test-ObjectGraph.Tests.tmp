#Requires -Modules @{ModuleName="Pester"; ModuleVersion="5.5.0"}

using module ..\..\ObjectGraphTools

[Diagnostics.CodeAnalysis.SuppressMessage('PSUseDeclaredVarsMoreThanAssignments', 'Person',   Justification = 'False positive')]
[Diagnostics.CodeAnalysis.SuppressMessage('PSUseDeclaredVarsMoreThanAssignments', 'Schema', Justification = 'False positive')]
param()

Describe 'Test-ObjectGraph' {

    BeforeAll {

        Set-StrictMode -Version Latest

        $Person = [PSCustomObject]@{
            FirstName = 'John'
            LastName = 'Smith'
            IsAlive = $True
            Birthday = [DateTime]'Monday,  October 7,  1963 10:47:00 PM'
            Age = 27
            Address = [PSCustomObject]@{
                Street = '21 2nd Street'
                City = 'New York'
                State = 'NY'
                PostalCode = '10021-3100'
            }
            phoneNumbers =[PSCustomObject] @(
                @{ Number = '212 555-1234' },
                @{ Number = '646 555-4567' }
            )
            Children = @('Catherine')
            Spouse = $Null
        }

        $Schema = @{
            title = 'Generated schema for Root'
            type = 'object'
            Items = @{
                AllNodes = @{
                    type = 'array'
                    items = @{
                        type = 'object'
                        properties = @{
                            NodeName = @{ type = 'string' }
                            CertificateFile = @{ type = 'string' }
                        }
                        required = @(
                            'NodeName',
                            'CertificateFile'
                        )
                    }
                }
                NonNodeData = @{}
            }
            required = @(
                'AllNodes',
                'NonNodeData'
            )
        }

    }

    Context 'Existence Check' {

        It 'Help' {
            Test-ObjectGraph -? | Out-String -Stream | Should -Contain SYNOPSIS
        }
    }

    Context 'Required' {
        # $Person | Test-ObjectGraph @{
        #     Required = @{
        #         FirstName = @{ Type = 'String' }
        #     }
        # }
    }
}